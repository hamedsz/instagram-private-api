<?php

namespace hamedsz\instagram_private_api\Requests\Accont;

use hamedsz\instagram_private_api\Instagram;
use hamedsz\instagram_private_api\Requests\Qe\Sync;
use hamedsz\instagram_private_api\Requests\Request;

class Login extends Request
{
    public $url = "/accounts/login/ajax/";
    public $method = "POST";
    public $headers = [];
    public $setHeader = true;

    public function __construct(Instagram $insta)
    {
        parent::__construct($insta);

        $this->form = [
            "username" => $insta->getUsername(),
            "enc_password" => self::generateEncPassword($insta->getPassword())
        ];
    }

    public function execute()
    {
        return parent::execute(); // TODO: Change the autogenerated stub
    }

    /*public static function enc($password, $publicKey, $keyId)
    {
        $time = time();
        $key  = openssl_random_pseudo_bytes(32); //'8dd9aad29d9a614c338cff479f850d3e';
        $iv   = openssl_random_pseudo_bytes(12); //'8dd9aad29d9a';

        $aesEncrypted = openssl_encrypt($password, 'aes-256-gcm', $key, OPENSSL_RAW_DATA, $iv, $tag, strval($time));

        $encryptedKey = \sodium_crypto_box_seal($key, \hex2bin($publicKey));

        return [
            'time'      => $time,
            'encrypted' => \base64_encode("\x01" | pack('n', intval($keyId)) . pack('s', strlen($encryptedKey)) . $encryptedKey . $tag . $aesEncrypted)
        ];
    }*/

    public static function generateEncPassword($password)
    {/*
        $result = self::enc($password, $publicKey, $keyId);
        dd($result);
        return '#PWD_INSTAGRAM_BROWSER:' . $version . ':' . $result['time'] . ':' . $result['encrypted'];*/

        return '#PWD_INSTAGRAM_BROWSER:0:' . time() . ":" . $password;
    }
}
